@model JQueryAjaxInMVC2.Models.ClassViewModel
@{
    ViewBag.Title = "AddOrEditClass";
    Layout = null;
}

<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Scripts/jquery-1.12.4.min.js"></script>

<script>
    $(document).ready(function () {

        $("#ClubID").change(function () {

            var clubID = $(this).val();
            debugger
            $.ajax({
                type: "Post",
                url: "/Class/GetInstructorList?ClubID=" + clubID,
                contentType: "html",
                success: function (response) {
                    debugger
                    $("#InstructorID").empty();
                    $("#InstructorID").append(response);
                }
            });

        });

    });


</script>


@using (Html.BeginForm("SaveClass", "Class", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPostClass(this);", data_restUrl = Url.Action("AddOrEditClass", "Class", new { id = 0 }) }))//data-resetUrl
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ClassID)

        <div class="form-group">
            @Html.LabelFor(model => model.ClubName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.ClubList != null)
                {
                    @Html.DropDownListFor(model => model.ClubID, ViewBag.ClubList as SelectList, "--Select Club --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClubID, "", new { @class = "text-danger" })
                }
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                @Html.DropDownListFor(model => model.InstructorID, new SelectList(""), "--Select Instructor--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InstructorID , "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.ClassDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                <div class="input-group date">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                    @Html.EditorFor(model => model.ClassDate, "", new { htmlAttributes = new { @class = " form-control datepicker", style = "width: 245px", placeholder = "Select Date" } })
                    
                </div>
            </div>
        </div>
         

        <div class="form-group">
            @Html.LabelFor(model => model.ClassTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassTime, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Start - End time" } })
                @Html.ValidationMessageFor(model => model.ClassTime, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.ClassGIAGPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon">£</span>
                    @Html.EditorFor(model => model.ClassGIAGPrice, new { htmlAttributes = new { @class = "form-control", style = "width: 250px", placeholder = "Enter Price" } })
                </div>
                @Html.ValidationMessageFor(model => model.ClassGIAGPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VenueName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VenueName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Venue name" } })
                @Html.ValidationMessageFor(model => model.VenueName, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Address line 1" } })
                @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Address line 2" } })
                @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Postcode" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @if (Model.ClassID != 0)
                {
                    <a class="btn btn-success" onclick="refreshAddNewClassTab('@Url.Action("AddOrEditClass", "Class", new { id = 0})', false)"><i class="fa fa-plus"></i>Add New Class</a>
                }
            </div>
        </div>


    </div>
}

@*<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Scripts/jquery-1.12.4.min.js"></script>

<script>
    $(document).ready(function () {

        $("#ClubID").change(function () {

            var clubID = $(this).val();
            debugger
            $.ajax({
                type: "Post",
                url: "/Class/GetInstructorList?ClubID=" + clubID,
                contentType: "html",
                success: function (response) {
                    debugger
                    $("#InstructorID").empty();
                    $("#InstructorID").append(response);
                }
            });

        });

    });
   

</script>*@

    
