@model JQueryAjaxInMVC2.Models.Club

@{
    ViewBag.Title = "AddOrEditClub";
    Layout = null;
}

@using (Html.BeginForm("SaveClub", "Club", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AddOrEditClub", "Club", new {id = 0}) }))//data-resetUrl
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ClubID)

        <div class="form-group">
            @Html.LabelFor(model => model.ClubName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClubName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Club name" } })
                @Html.ValidationMessageFor(model => model.ClubName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClubMembership, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon">£</span>
                        @Html.EditorFor(model => model.ClubMembership, new { htmlAttributes = new { @class = "form-control", style = "width: 250px", placeholder = "Enter Membership price" } })
                </div>
                @Html.ValidationMessageFor(model => model.ClubMembership, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClubDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ClubDescription, htmlAttributes: new { @class = "form-control", @rows = 5, @colls = 30, placeholder = "Enter Club description" })
                @Html.ValidationMessageFor(model => model.ClubDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @if(Model.ClubID != 0)
                {
                    <a class="btn btn-success"onclick="refreshAddNewTab('@Url.Action("AddOrEditClub", "Club", new { id = 0})', false)"><i class="fa fa-plus"></i>Add New Club</a>
                }
            </div>
        </div>
    </div>
}

